on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    # runs tests every day at 1am EST
    - cron:  '0 5 * * *'

name: GH-R-CMD-check

jobs:
  GH-R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-16.04,   r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
          - {os: windows-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_COMPILE_AND_INSTALL_PACKAGES: 'always'

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - uses: actions/setup-java@v1
        with:
          java-version: '8' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "16.04"), sep = "\n")')


      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Install devel versions
        run: |
          try(remotes::install_github("tidymodels/tidymodels"), silent = TRUE)
          try(remotes::install_github("tidymodels/workflows"), silent = TRUE)
          try(remotes::install_github("tidymodels/hardhat"), silent = TRUE)
          try(remotes::install_github("tidymodels/parsnip"), silent = TRUE)
          try(remotes::install_github("tidymodels/dials"), silent = TRUE)
          try(remotes::install_github("tidymodels/recipes"), silent = TRUE)
          try(remotes::install_github("tidymodels/tune"), silent = TRUE)
          try(remotes::install_github("tidymodels/rsample"), silent = TRUE)
          try(remotes::install_github("tidymodels/yardstick"), silent = TRUE)
          try(remotes::install_github("tidymodels/modeldata"), silent = TRUE)
          try(remotes::install_github("tidymodels/themis"), silent = TRUE)
          try(remotes::install_github("tidymodels/poissonreg"), silent = TRUE)
          try(remotes::install_github("tidymodels/discrim"), silent = TRUE)
          try(remotes::install_github("tidymodels/plsmod"), silent = TRUE)
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
