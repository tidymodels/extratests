# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
#
# NOTE: This workflow is overkill for most R packages and
# check-standard.yaml is likely a better choice.
# usethis::use_github_action("check-standard") will install it.
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # runs tests every day at 1am EST
    - cron:  '0 5 * * *'

name: GH-R-CMD-check-test

jobs:
  GH-R-CMD-check-test:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-18.04,   r: 'devel', http-user-agent: 'release'}
          - {os: windows-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_COMPILE_AND_INSTALL_PACKAGES: 'always'
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck

      - name: Install pak and query dependencies
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::pkg_deps_tree("local::.", dependencies = TRUE), ".github/r-depends.rds")
        shell: Rscript {0}

      - name: install nlopt, glpk, and libxml2 on Windows
        if: runner.os == 'windows'
        run: pacman -Sy --noconfirm mingw-w64-{i686,x86_64}-{nlopt,glpk,libxml2}
        shell: c:\rtools40\usr\bin\bash.exe --login {0}

      - name: Install devel versions
        run: |
          try(pak::pkg_install("tidymodels/tidymodels"))
          try(pak::pkg_install("tidymodels/workflows"))
          try(pak::pkg_install("tidymodels/hardhat"))
          try(pak::pkg_install("tidymodels/parsnip"))
          try(pak::pkg_install("tidymodels/dials"))
          try(pak::pkg_install("tidymodels/recipes"))
          try(pak::pkg_install("tidymodels/tune"))
          try(pak::pkg_install("tidymodels/rsample"))
          try(pak::pkg_install("tidymodels/yardstick"))
          try(pak::pkg_install("tidymodels/modeldata"))
          try(pak::pkg_install("tidymodels/themis"))
          try(pak::pkg_install("tidymodels/poissonreg"))
          try(pak::pkg_install("tidymodels/discrim"))
          try(pak::pkg_install("tidymodels/plsmod"))
          try(pak::pkg_install("tidymodels/spatialsample"))
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v1

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Notify slack fail
        if: failure() && github.event_name == 'schedule'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: G01LVEJHSN6
          status: FAILED
          color: danger
